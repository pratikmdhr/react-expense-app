{"version":3,"sources":["components/Expenses/new expense/ExpenseForm.js","components/Expenses/new expense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","e","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseDate","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","stopEditingHandler","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpenseDate","month","toLocaleString","year","getFullYear","day","ExpenseItem","ExpensesList","items","length","map","expense","ExpensesFilter","selected","onChangeFilter","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","totalMaximum","total","dataPoints","dataPoint","months","ExpensesChart","chartDataPoints","totalExpenses","expenses","forEach","expenseMonth","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpense","filter","selectedYear","INITIAL_EXPENSES","App","setExpenses","previousExpenses","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9205738.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n\r\n  // Alternative:\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n  // const titleChangeHandler = (e) => {\r\n  //   setUserInput({ ...userInput, enteredTitle: e.target.value });\r\n  // };\r\n  // const amountChangeHandler = (e) => {\r\n  //   setUserInput({ ...userInput, enteredAmount: e.target.value });\r\n  // };\r\n  // const dateChangeHandler = (e) => {\r\n  //   setUserInput({ ...userInput, enteredDate: e.target.value });\r\n  // };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseDate(expenseData);\r\n\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm.js';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    stopEditingHandler();\r\n  };\r\n\r\n  const startEditingHandler = () => setIsEditing(true);\r\n  const stopEditingHandler = () => setIsEditing(false);\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && (\r\n        <button type='submit' onClick={startEditingHandler}>\r\n          Add New Expense\r\n        </button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onCancel={stopEditingHandler}\r\n          onSaveExpenseDate={saveExpenseDataHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = ({ date }) => {\r\n  const month = date.toLocaleString('en-US', { month: 'long' });\r\n  const year = date.getFullYear();\r\n  const day = date.toLocaleString('en-US', { day: '2-digit' });\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from 'react';\r\nimport './ExpenseItem.css';\r\nimport Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\nconst ExpenseItem = (props) => {\r\n  // const [title, setTitle] = useState(props.title);\r\n  const title = props.title;\r\n\r\n  // const clickHandler = () => {\r\n  //   setTitle('Yay');\r\n  //   console.log(title);\r\n  // };\r\n\r\n  return (\r\n    <li>\r\n      <Card className='expense-item'>\r\n        <ExpenseDate date={props.date} />\r\n        <div className='expense-item__description'>\r\n          <h2>{title}</h2>\r\n          <div className='expense-item__price'>{`$${props.amount}`}</div>\r\n        </div>\r\n        {/* <button onClick={clickHandler}>Change Title</button> */}\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = ({ items }) => {\r\n  if (items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>No Expenses Found...</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (e) => {\r\n    props.onChangeFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  // const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  // const totalMaximum = Math.max(...dataPointValues);\r\n  const totalMaximum = props.total;\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\n// prettier-ignore\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = months.map((month) => ({\r\n    label: month,\r\n    value: 0,\r\n  }));\r\n  let totalExpenses = 0;\r\n\r\n  props.expenses.forEach((expense) => {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n    totalExpenses += expense.amount;\r\n  });\r\n\r\n  return <Chart dataPoints={chartDataPoints} total={totalExpenses} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpense = props.items.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  return (\r\n    <Card className='expenses'>\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpense} year={filteredYear} />\r\n      <ExpensesList items={filteredExpense} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\nimport NewExpense from './components/Expenses/new expense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst INITIAL_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 499.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 3, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((previousExpenses) => [expense, ...previousExpenses]);\n    console.log(expense.date.getFullYear().toString());\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}